{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/phonebook.js","App.js","serviceWorker.js","index.js"],"names":["Filter","filterValue","handleFilter","onChange","value","PersonForm","setNewPerson","addPerson","newPerson","onSubmit","event","name","target","number","type","Persons","persons","handleDelete","map","person","key","onClick","id","Notification","message","isError","errorStyle","color","className","style","baseUrl","axios","get","then","response","data","newObject","post","delete","updatedObject","put","App","useState","setPersons","filter","setFilter","notification","setNotification","useEffect","phonebookService","phones","personsToShow","length","toLowerCase","includes","preventDefault","newPersonObject","existedPerson","find","window","confirm","setTimeout","concat","catch","error","errorMessage","personToDelete","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca9369ad.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ filterValue, handleFilter }) => (\n  <div>\n    filter shown with: <input onChange={handleFilter} value={filterValue} />\n  </div>\n);\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({ setNewPerson, addPerson, newPerson }) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name:{\" \"}\n        <input\n          onChange={event =>\n            setNewPerson({ ...newPerson, name: event.target.value })\n          }\n          value={newPerson.name}\n        />\n        <br />\n        phone:{\" \"}\n        <input\n          onChange={event =>\n            setNewPerson({ ...newPerson, number: event.target.value })\n          }\n          value={newPerson.number}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ persons, handleDelete }) =>\n  persons.map(person => (\n    <p key={person.name}>\n      {person.name} : {person.number}\n      <button onClick={() => handleDelete(person.id)}>delete</button>\n    </p>\n  ));\n\nexport default Persons;\n","import React from \"react\";\n\nconst Notification = ({ message, isError }) => {\n  if (message === null) {\n    return null;\n  }\n\n  const errorStyle = isError ? { color: \"red\" } : {};\n\n  return (\n    <div className=\"notification\" style={errorStyle}>\n      {message}\n    </div>\n  );\n};\n\nexport default Notification;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deleteEntry = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst updateEntry = (id, updatedObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, updatedObject);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, deleteEntry, updateEntry };\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\nimport phonebookService from \"./services/phonebook\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newPerson, setNewPerson] = useState({ name: \"\", number: \"\" });\n  const [filter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState({\n    message: null,\n    isError: null,\n  });\n\n  useEffect(() => {\n    phonebookService.getAll().then((phones) => setPersons(phones));\n  }, []);\n\n  const personsToShow = filter.length\n    ? persons.filter((person) =>\n        person.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    : persons;\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const newPersonObject = {\n      name: newPerson.name,\n      number: newPerson.number,\n    };\n\n    const existedPerson = persons.find(\n      (person) => person.name === newPerson.name\n    );\n\n    if (existedPerson) {\n      if (\n        window.confirm(\n          `${existedPerson.name} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        newPersonObject.id = existedPerson.id;\n\n        phonebookService\n          .updateEntry(existedPerson.id, newPersonObject)\n          .then((data) => {\n            setNotification({\n              message: `Added ${newPerson.name}`,\n              isError: false,\n            });\n            setTimeout(\n              () => setNotification({ message: null, isError: null }),\n              5000\n            );\n            setPersons(\n              persons\n                .filter((person) => person.id !== existedPerson.id)\n                .concat(data)\n            );\n            setNewPerson({ name: \"\", number: \"\" });\n          });\n      }\n    } else {\n      newPersonObject.id = persons[persons.length - 1].id + 1;\n\n      phonebookService\n        .create(newPersonObject)\n        .then((data) => {\n          setNotification({\n            message: `Added ${newPerson.name}`,\n            isError: false,\n          });\n          setTimeout(\n            () => setNotification({ message: null, isError: null }),\n            5000\n          );\n          setPersons(persons.concat(data));\n          setNewPerson({ name: \"\", number: \"\" });\n        })\n        .catch((error) => {\n          const errorMessage = error.response.data.error;\n          setNotification({\n            message: errorMessage,\n            isError: true,\n          });\n          setTimeout(\n            () => setNotification({ message: null, isError: null }),\n            5000\n          );\n        });\n    }\n  };\n\n  const handleFilter = (event) => setFilter(event.target.value);\n\n  const handleDelete = (id) => {\n    const personToDelete = persons.find((person) => person.id === id);\n    if (window.confirm(`Delete ${personToDelete.name} ?`)) {\n      phonebookService\n        .deleteEntry(id)\n        .then(() => setPersons(persons.filter((person) => person.id !== id)))\n        .catch((error) => {\n          setNotification({\n            message: `the note '${personToDelete.name}' was already deleted from server`,\n            isError: true,\n          });\n          setTimeout(\n            () => setNotification({ message: null, isError: null }),\n            5000\n          );\n          setPersons(persons.filter((person) => person.id !== id));\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification\n        message={notification.message}\n        isError={notification.isError}\n      />\n\n      <Filter filterValue={filter} handleFilter={handleFilter} />\n      <h2>Add a new</h2>\n      <PersonForm\n        addPerson={addPerson}\n        setNewPerson={setNewPerson}\n        newPerson={newPerson}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}